{
  "version": 3,
  "sources": ["../../preact-render-to-string/src/util.js", "../../preact-render-to-string/src/index.js", "dep:preact-render-to-string"],
  "sourcesContent": ["// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;\n\nconst ENCODED_ENTITIES = /[&<>\"]/;\n\nexport function encodeEntities(str) {\n\t// Ensure we're always parsing and returning a string:\n\tstr += '';\n\n\t// Skip all work for strings with no entities needing encoding:\n\tif (ENCODED_ENTITIES.test(str) === false) return str;\n\n\tlet last = 0,\n\t\ti = 0,\n\t\tout = '',\n\t\tch = '';\n\n\t// Seek forward in str until the next entity char:\n\tfor (; i<str.length; i++) {\n\t\tswitch (str.charCodeAt(i)) {\n\t\t\tcase 60: ch = '&lt;'; break;\n\t\t\tcase 62: ch = '&gt;'; break;\n\t\t\tcase 34: ch = '&quot;'; break;\n\t\t\tcase 38: ch = '&amp;'; break;\n\t\t\tdefault: continue;\n\t\t}\n\t\t// Append skipped/buffered characters and the encoded entity:\n\t\tif (i > last) out += str.slice(last, i);\n\t\tout += ch;\n\t\t// Start the next seek/buffer after the entity's offset:\n\t\tlast = i + 1;\n\t}\n\treturn out + str.slice(last, i);\n}\n\nexport let indent = (s, char) =>\n\tString(s).replace(/(\\n+)/g, '$1' + (char || '\\t'));\n\nexport let isLargeString = (s, length, ignoreLines) =>\n\tString(s).length > (length || 40) ||\n\t(!ignoreLines && String(s).indexOf('\\n') !== -1) ||\n\tString(s).indexOf('<') !== -1;\n\nconst JS_TO_CSS = {};\n\n// Convert an Object style to a CSSText string\nexport function styleObjToCss(s) {\n\tlet str = '';\n\tfor (let prop in s) {\n\t\tlet val = s[prop];\n\t\tif (val != null && val !== '') {\n\t\t\tif (str) str += ' ';\n\t\t\t// str += jsToCss(prop);\n\t\t\tstr +=\n\t\t\t\tprop[0] == '-'\n\t\t\t\t\t? prop\n\t\t\t\t\t: JS_TO_CSS[prop] ||\n\t\t\t\t\t  (JS_TO_CSS[prop] = prop.replace(/([A-Z])/g, '-$1').toLowerCase());\n\t\t\tstr += ': ';\n\t\t\tstr += val;\n\t\t\tif (typeof val === 'number' && IS_NON_DIMENSIONAL.test(prop) === false) {\n\t\t\t\tstr += 'px';\n\t\t\t}\n\t\t\tstr += ';';\n\t\t}\n\t}\n\treturn str || undefined;\n}\n\n/**\n * Copy all properties from `props` onto `obj`.\n * @param {object} obj Object onto which properties should be copied.\n * @param {object} props Object from which to copy properties.\n * @returns {object}\n * @private\n */\nexport function assign(obj, props) {\n\treturn Object.assign(obj, props);\n}\n\n/**\n * Get flattened children from the children prop\n * @param {Array} accumulator\n * @param {any} children A `props.children` opaque object.\n * @returns {Array} accumulator\n * @private\n */\nexport function getChildren(accumulator, children) {\n\tif (Array.isArray(children)) {\n\t\tchildren.reduce(getChildren, accumulator);\n\t} else if (children != null && children !== false) {\n\t\taccumulator.push(children);\n\t}\n\treturn accumulator;\n}\n", "import {\n\tencodeEntities,\n\tindent,\n\tisLargeString,\n\tstyleObjToCss,\n\tgetChildren\n} from './util';\nimport { options, Fragment } from 'preact';\n\n/** @typedef {import('preact').VNode} VNode */\n\nconst SHALLOW = { shallow: true };\n\n// components without names, kept as a hash for later comparison to return consistent UnnamedComponentXX names.\nconst UNNAMED = [];\n\nconst VOID_ELEMENTS = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/;\n\nconst UNSAFE_NAME = /[\\s\\n\\\\/='\"\\0<>]/;\nconst XLINK = /^xlink:?./;\n\nfunction markAsDirty() {\n\tthis.__d = true;\n}\n\n/** Render Preact JSX + Components to an HTML string.\n *\t@name render\n *\t@function\n *\t@param {VNode} vnode\tJSX VNode to render.\n *\t@param {Object} [context={}]\tOptionally pass an initial context object through the render path.\n *\t@param {Object} [options={}]\tRendering options\n *\t@param {Boolean} [options.shallow=false]\tIf `true`, renders nested Components as HTML elements (`<Foo a=\"b\" />`).\n *\t@param {Boolean} [options.xml=false]\t\tIf `true`, uses self-closing tags for elements without children.\n *\t@param {Boolean} [options.pretty=false]\t\tIf `true`, adds whitespace for readability\n *\t@param {RegExp|undefined} [options.voidElements]       RegeEx that matches elements that are considered void (self-closing)\n */\nrenderToString.render = renderToString;\n\n/** Only render elements, leaving Components inline as `<ComponentName ... />`.\n *\tThis method is just a convenience alias for `render(vnode, context, { shallow:true })`\n *\t@name shallow\n *\t@function\n *\t@param {VNode} vnode\tJSX VNode to render.\n *\t@param {Object} [context={}]\tOptionally pass an initial context object through the render path.\n */\nlet shallowRender = (vnode, context) => renderToString(vnode, context, SHALLOW);\n\nconst EMPTY_ARR = [];\nfunction renderToString(vnode, context, opts) {\n\tcontext = context || {};\n\topts = opts || {};\n\n\t// Performance optimization: `renderToString` is synchronous and we\n\t// therefore don't execute any effects. To do that we pass an empty\n\t// array to `options._commit` (`__c`). But we can go one step further\n\t// and avoid a lot of dirty checks and allocations by setting\n\t// `options._skipEffects` (`__s`) too.\n\tconst previousSkipEffects = options.__s;\n\toptions.__s = true;\n\n\tlet res;\n\tif (opts.pretty || opts.sortAttributes) {\n\t\tres = _renderToStringPretty(vnode, context, opts);\n\t} else {\n\t\tres = _renderToString(vnode, context, opts);\n\t}\n\n\t// options._commit, we don't schedule any effects in this library right now,\n\t// so we can pass an empty queue to this hook.\n\tif (options.__c) options.__c(vnode, EMPTY_ARR);\n\tEMPTY_ARR.length = 0;\n\toptions.__s = previousSkipEffects;\n\treturn res;\n}\n\nfunction createComponent(vnode, context) {\n\treturn {\n\t\t__v: vnode,\n\t\tcontext,\n\t\tprops: vnode.props,\n\t\t// silently drop state updates\n\t\tsetState: markAsDirty,\n\t\tforceUpdate: markAsDirty,\n\t\t__d: true,\n\t\t// hooks\n\t\t__h: []\n\t};\n}\n\n// Necessary for createContext api. Setting this property will pass\n// the context value as `this.context` just for this component.\nfunction getContext(nodeName, context) {\n\tlet cxType = nodeName.contextType;\n\tlet provider = cxType && context[cxType.__c];\n\treturn cxType != null\n\t\t? provider\n\t\t\t? provider.props.value\n\t\t\t: cxType.__\n\t\t: context;\n}\n\n/** The default export is an alias of `render()`. */\nfunction _renderToString(vnode, context, opts, inner, isSvgMode, selectValue) {\n\tif (vnode == null || typeof vnode === 'boolean') {\n\t\treturn '';\n\t}\n\n\t// #text nodes\n\tif (typeof vnode !== 'object') {\n\t\treturn encodeEntities(vnode);\n\t}\n\n\tif (Array.isArray(vnode)) {\n\t\tconst rendered = [];\n\t\tfor (let i = 0; i < vnode.length; i++) {\n\t\t\trendered.push(\n\t\t\t\t_renderToString(vnode[i], context, opts, inner, isSvgMode, selectValue)\n\t\t\t);\n\t\t}\n\t\treturn rendered.join('');\n\t}\n\n\tlet nodeName = vnode.type,\n\t\tprops = vnode.props,\n\t\tisComponent = false;\n\n\t// components\n\tif (typeof nodeName === 'function') {\n\t\tisComponent = true;\n\t\tif (opts.shallow && (inner || opts.renderRootComponent === false)) {\n\t\t\tnodeName = getComponentName(nodeName);\n\t\t} else if (nodeName === Fragment) {\n\t\t\tconst children = [];\n\t\t\tgetChildren(children, vnode.props.children);\n\t\t\treturn _renderToString(\n\t\t\t\tchildren,\n\t\t\t\tcontext,\n\t\t\t\topts,\n\t\t\t\topts.shallowHighOrder !== false,\n\t\t\t\tisSvgMode,\n\t\t\t\tselectValue\n\t\t\t);\n\t\t} else {\n\t\t\tlet rendered;\n\n\t\t\tlet c = (vnode.__c = createComponent(vnode, context));\n\n\t\t\t// options._diff\n\t\t\tif (options.__b) options.__b(vnode);\n\n\t\t\t// options._render\n\t\t\tlet renderHook = options.__r;\n\n\t\t\tif (\n\t\t\t\t!nodeName.prototype ||\n\t\t\t\ttypeof nodeName.prototype.render !== 'function'\n\t\t\t) {\n\t\t\t\tlet cctx = getContext(nodeName, context);\n\n\t\t\t\t// If a hook invokes setState() to invalidate the component during rendering,\n\t\t\t\t// re-render it up to 25 times to allow \"settling\" of memoized states.\n\t\t\t\t// Note:\n\t\t\t\t//   This will need to be updated for Preact 11 to use internal.flags rather than component._dirty:\n\t\t\t\t//   https://github.com/preactjs/preact/blob/d4ca6fdb19bc715e49fd144e69f7296b2f4daa40/src/diff/component.js#L35-L44\n\t\t\t\tlet count = 0;\n\t\t\t\twhile (c.__d && count++ < 25) {\n\t\t\t\t\tc.__d = false;\n\n\t\t\t\t\tif (renderHook) renderHook(vnode);\n\n\t\t\t\t\t// stateless functional components\n\t\t\t\t\trendered = nodeName.call(vnode.__c, props, cctx);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet cctx = getContext(nodeName, context);\n\n\t\t\t\t// c = new nodeName(props, context);\n\t\t\t\tc = vnode.__c = new nodeName(props, cctx);\n\t\t\t\tc.__v = vnode;\n\t\t\t\t// turn off stateful re-rendering:\n\t\t\t\tc._dirty = c.__d = true;\n\t\t\t\tc.props = props;\n\t\t\t\tif (c.state == null) c.state = {};\n\n\t\t\t\tif (c._nextState == null && c.__s == null) {\n\t\t\t\t\tc._nextState = c.__s = c.state;\n\t\t\t\t}\n\n\t\t\t\tc.context = cctx;\n\t\t\t\tif (nodeName.getDerivedStateFromProps)\n\t\t\t\t\tc.state = Object.assign(\n\t\t\t\t\t\t{},\n\t\t\t\t\t\tc.state,\n\t\t\t\t\t\tnodeName.getDerivedStateFromProps(c.props, c.state)\n\t\t\t\t\t);\n\t\t\t\telse if (c.componentWillMount) {\n\t\t\t\t\tc.componentWillMount();\n\n\t\t\t\t\t// If the user called setState in cWM we need to flush pending,\n\t\t\t\t\t// state updates. This is the same behaviour in React.\n\t\t\t\t\tc.state =\n\t\t\t\t\t\tc._nextState !== c.state\n\t\t\t\t\t\t\t? c._nextState\n\t\t\t\t\t\t\t: c.__s !== c.state\n\t\t\t\t\t\t\t? c.__s\n\t\t\t\t\t\t\t: c.state;\n\t\t\t\t}\n\n\t\t\t\tif (renderHook) renderHook(vnode);\n\n\t\t\t\trendered = c.render(c.props, c.state, c.context);\n\t\t\t}\n\n\t\t\tif (c.getChildContext) {\n\t\t\t\tcontext = Object.assign({}, context, c.getChildContext());\n\t\t\t}\n\n\t\t\tif (options.diffed) options.diffed(vnode);\n\t\t\treturn _renderToString(\n\t\t\t\trendered,\n\t\t\t\tcontext,\n\t\t\t\topts,\n\t\t\t\topts.shallowHighOrder !== false,\n\t\t\t\tisSvgMode,\n\t\t\t\tselectValue\n\t\t\t);\n\t\t}\n\t}\n\n\t// render JSX to HTML\n\tlet s = `<${nodeName}`,\n\t\tpropChildren,\n\t\thtml;\n\n\tif (props) {\n\t\tfor (let name in props) {\n\t\t\tlet v = props[name];\n\t\t\tif (name === 'children') {\n\t\t\t\tpropChildren = v;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (UNSAFE_NAME.test(name)) continue;\n\n\t\t\tif (\n\t\t\t\t!(opts && opts.allAttributes) &&\n\t\t\t\t(name === 'key' ||\n\t\t\t\t\tname === 'ref' ||\n\t\t\t\t\tname === '__self' ||\n\t\t\t\t\tname === '__source')\n\t\t\t)\n\t\t\t\tcontinue;\n\n\t\t\tif (name === 'defaultValue') {\n\t\t\t\tname = 'value';\n\t\t\t} else if (name === 'defaultChecked') {\n\t\t\t\tname = 'checked';\n\t\t\t} else if (name === 'defaultSelected') {\n\t\t\t\tname = 'selected';\n\t\t\t} else if (name === 'className') {\n\t\t\t\tif (typeof props.class !== 'undefined') continue;\n\t\t\t\tname = 'class';\n\t\t\t} else if (isSvgMode && XLINK.test(name)) {\n\t\t\t\tname = name.toLowerCase().replace(/^xlink:?/, 'xlink:');\n\t\t\t}\n\n\t\t\tif (name === 'htmlFor') {\n\t\t\t\tif (props.for) continue;\n\t\t\t\tname = 'for';\n\t\t\t}\n\n\t\t\tif (name === 'style' && v && typeof v === 'object') {\n\t\t\t\tv = styleObjToCss(v);\n\t\t\t}\n\n\t\t\t// always use string values instead of booleans for aria attributes\n\t\t\t// also see https://github.com/preactjs/preact/pull/2347/files\n\t\t\tif (name[0] === 'a' && name['1'] === 'r' && typeof v === 'boolean') {\n\t\t\t\tv = String(v);\n\t\t\t}\n\n\t\t\tlet hooked =\n\t\t\t\topts.attributeHook &&\n\t\t\t\topts.attributeHook(name, v, context, opts, isComponent);\n\t\t\tif (hooked || hooked === '') {\n\t\t\t\ts = s + hooked;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (name === 'dangerouslySetInnerHTML') {\n\t\t\t\thtml = v && v.__html;\n\t\t\t} else if (nodeName === 'textarea' && name === 'value') {\n\t\t\t\t// <textarea value=\"a&b\"> --> <textarea>a&amp;b</textarea>\n\t\t\t\tpropChildren = v;\n\t\t\t} else if ((v || v === 0 || v === '') && typeof v !== 'function') {\n\t\t\t\tif (v === true || v === '') {\n\t\t\t\t\tv = name;\n\t\t\t\t\t// in non-xml mode, allow boolean attributes\n\t\t\t\t\tif (!opts || !opts.xml) {\n\t\t\t\t\t\ts = s + ' ' + name;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (name === 'value') {\n\t\t\t\t\tif (nodeName === 'select') {\n\t\t\t\t\t\tselectValue = v;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t// If we're looking at an <option> and it's the currently selected one\n\t\t\t\t\t\tnodeName === 'option' &&\n\t\t\t\t\t\tselectValue == v &&\n\t\t\t\t\t\t// and the <option> doesn't already have a selected attribute on it\n\t\t\t\t\t\ttypeof props.selected === 'undefined'\n\t\t\t\t\t) {\n\t\t\t\t\t\ts = `${s} selected`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ts = s + ` ${name}=\"${encodeEntities(v)}\"`;\n\t\t\t}\n\t\t}\n\t}\n\n\ts = s + '>';\n\n\tif (UNSAFE_NAME.test(nodeName))\n\t\tthrow new Error(`${nodeName} is not a valid HTML tag name in ${s}`);\n\n\tlet isVoid =\n\t\tVOID_ELEMENTS.test(nodeName) ||\n\t\t(opts.voidElements && opts.voidElements.test(nodeName));\n\tlet pieces = '';\n\n\tlet children;\n\tif (html) {\n\t\ts = s + html;\n\t} else if (\n\t\tpropChildren != null &&\n\t\tgetChildren((children = []), propChildren).length\n\t) {\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tlet child = children[i];\n\n\t\t\tif (child != null && child !== false) {\n\t\t\t\tlet childSvgMode =\n\t\t\t\t\t\tnodeName === 'svg'\n\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t: nodeName === 'foreignObject'\n\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t: isSvgMode,\n\t\t\t\t\tret = _renderToString(\n\t\t\t\t\t\tchild,\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\topts,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tchildSvgMode,\n\t\t\t\t\t\tselectValue\n\t\t\t\t\t);\n\n\t\t\t\t// Skip if we received an empty string\n\t\t\t\tif (ret) {\n\t\t\t\t\tpieces = pieces + ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (pieces.length || html) {\n\t\ts = s + pieces;\n\t} else if (opts && opts.xml) {\n\t\treturn s.substring(0, s.length - 1) + ' />';\n\t}\n\n\tif (isVoid && !children && !html) {\n\t\treturn s.replace(/>$/, ' />');\n\t}\n\n\treturn `${s}</${nodeName}>`;\n}\n\n/** The default export is an alias of `render()`. */\nfunction _renderToStringPretty(\n\tvnode,\n\tcontext,\n\topts,\n\tinner,\n\tisSvgMode,\n\tselectValue\n) {\n\tif (vnode == null || typeof vnode === 'boolean') {\n\t\treturn '';\n\t}\n\n\t// #text nodes\n\tif (typeof vnode !== 'object') {\n\t\treturn encodeEntities(vnode);\n\t}\n\n\tlet pretty = opts.pretty,\n\t\tindentChar = pretty && typeof pretty === 'string' ? pretty : '\\t';\n\n\tif (Array.isArray(vnode)) {\n\t\tlet rendered = '';\n\t\tfor (let i = 0; i < vnode.length; i++) {\n\t\t\tif (pretty && i > 0) rendered = rendered + '\\n';\n\t\t\trendered =\n\t\t\t\trendered +\n\t\t\t\t_renderToStringPretty(\n\t\t\t\t\tvnode[i],\n\t\t\t\t\tcontext,\n\t\t\t\t\topts,\n\t\t\t\t\tinner,\n\t\t\t\t\tisSvgMode,\n\t\t\t\t\tselectValue\n\t\t\t\t);\n\t\t}\n\t\treturn rendered;\n\t}\n\n\tlet nodeName = vnode.type,\n\t\tprops = vnode.props,\n\t\tisComponent = false;\n\n\t// components\n\tif (typeof nodeName === 'function') {\n\t\tisComponent = true;\n\t\tif (opts.shallow && (inner || opts.renderRootComponent === false)) {\n\t\t\tnodeName = getComponentName(nodeName);\n\t\t} else if (nodeName === Fragment) {\n\t\t\tconst children = [];\n\t\t\tgetChildren(children, vnode.props.children);\n\t\t\treturn _renderToStringPretty(\n\t\t\t\tchildren,\n\t\t\t\tcontext,\n\t\t\t\topts,\n\t\t\t\topts.shallowHighOrder !== false,\n\t\t\t\tisSvgMode,\n\t\t\t\tselectValue\n\t\t\t);\n\t\t} else {\n\t\t\tlet rendered;\n\n\t\t\tlet c = (vnode.__c = createComponent(vnode, context));\n\n\t\t\t// options._diff\n\t\t\tif (options.__b) options.__b(vnode);\n\n\t\t\t// options._render\n\t\t\tlet renderHook = options.__r;\n\n\t\t\tif (\n\t\t\t\t!nodeName.prototype ||\n\t\t\t\ttypeof nodeName.prototype.render !== 'function'\n\t\t\t) {\n\t\t\t\tlet cctx = getContext(nodeName, context);\n\n\t\t\t\t// If a hook invokes setState() to invalidate the component during rendering,\n\t\t\t\t// re-render it up to 25 times to allow \"settling\" of memoized states.\n\t\t\t\t// Note:\n\t\t\t\t//   This will need to be updated for Preact 11 to use internal.flags rather than component._dirty:\n\t\t\t\t//   https://github.com/preactjs/preact/blob/d4ca6fdb19bc715e49fd144e69f7296b2f4daa40/src/diff/component.js#L35-L44\n\t\t\t\tlet count = 0;\n\t\t\t\twhile (c.__d && count++ < 25) {\n\t\t\t\t\tc.__d = false;\n\n\t\t\t\t\tif (renderHook) renderHook(vnode);\n\n\t\t\t\t\t// stateless functional components\n\t\t\t\t\trendered = nodeName.call(vnode.__c, props, cctx);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet cctx = getContext(nodeName, context);\n\n\t\t\t\t// c = new nodeName(props, context);\n\t\t\t\tc = vnode.__c = new nodeName(props, cctx);\n\t\t\t\tc.__v = vnode;\n\t\t\t\t// turn off stateful re-rendering:\n\t\t\t\tc._dirty = c.__d = true;\n\t\t\t\tc.props = props;\n\t\t\t\tif (c.state == null) c.state = {};\n\n\t\t\t\tif (c._nextState == null && c.__s == null) {\n\t\t\t\t\tc._nextState = c.__s = c.state;\n\t\t\t\t}\n\n\t\t\t\tc.context = cctx;\n\t\t\t\tif (nodeName.getDerivedStateFromProps)\n\t\t\t\t\tc.state = Object.assign(\n\t\t\t\t\t\t{},\n\t\t\t\t\t\tc.state,\n\t\t\t\t\t\tnodeName.getDerivedStateFromProps(c.props, c.state)\n\t\t\t\t\t);\n\t\t\t\telse if (c.componentWillMount) {\n\t\t\t\t\tc.componentWillMount();\n\n\t\t\t\t\t// If the user called setState in cWM we need to flush pending,\n\t\t\t\t\t// state updates. This is the same behaviour in React.\n\t\t\t\t\tc.state =\n\t\t\t\t\t\tc._nextState !== c.state\n\t\t\t\t\t\t\t? c._nextState\n\t\t\t\t\t\t\t: c.__s !== c.state\n\t\t\t\t\t\t\t? c.__s\n\t\t\t\t\t\t\t: c.state;\n\t\t\t\t}\n\n\t\t\t\tif (renderHook) renderHook(vnode);\n\n\t\t\t\trendered = c.render(c.props, c.state, c.context);\n\t\t\t}\n\n\t\t\tif (c.getChildContext) {\n\t\t\t\tcontext = Object.assign({}, context, c.getChildContext());\n\t\t\t}\n\n\t\t\tif (options.diffed) options.diffed(vnode);\n\t\t\treturn _renderToStringPretty(\n\t\t\t\trendered,\n\t\t\t\tcontext,\n\t\t\t\topts,\n\t\t\t\topts.shallowHighOrder !== false,\n\t\t\t\tisSvgMode,\n\t\t\t\tselectValue\n\t\t\t);\n\t\t}\n\t}\n\n\t// render JSX to HTML\n\tlet s = '<' + nodeName,\n\t\tpropChildren,\n\t\thtml;\n\n\tif (props) {\n\t\tlet attrs = Object.keys(props);\n\n\t\t// allow sorting lexicographically for more determinism (useful for tests, such as via preact-jsx-chai)\n\t\tif (opts && opts.sortAttributes === true) attrs.sort();\n\n\t\tfor (let i = 0; i < attrs.length; i++) {\n\t\t\tlet name = attrs[i],\n\t\t\t\tv = props[name];\n\t\t\tif (name === 'children') {\n\t\t\t\tpropChildren = v;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (UNSAFE_NAME.test(name)) continue;\n\n\t\t\tif (\n\t\t\t\t!(opts && opts.allAttributes) &&\n\t\t\t\t(name === 'key' ||\n\t\t\t\t\tname === 'ref' ||\n\t\t\t\t\tname === '__self' ||\n\t\t\t\t\tname === '__source')\n\t\t\t)\n\t\t\t\tcontinue;\n\n\t\t\tif (name === 'defaultValue') {\n\t\t\t\tname = 'value';\n\t\t\t} else if (name === 'defaultChecked') {\n\t\t\t\tname = 'checked';\n\t\t\t} else if (name === 'defaultSelected') {\n\t\t\t\tname = 'selected';\n\t\t\t} else if (name === 'className') {\n\t\t\t\tif (typeof props.class !== 'undefined') continue;\n\t\t\t\tname = 'class';\n\t\t\t} else if (isSvgMode && XLINK.test(name)) {\n\t\t\t\tname = name.toLowerCase().replace(/^xlink:?/, 'xlink:');\n\t\t\t}\n\n\t\t\tif (name === 'htmlFor') {\n\t\t\t\tif (props.for) continue;\n\t\t\t\tname = 'for';\n\t\t\t}\n\n\t\t\tif (name === 'style' && v && typeof v === 'object') {\n\t\t\t\tv = styleObjToCss(v);\n\t\t\t}\n\n\t\t\t// always use string values instead of booleans for aria attributes\n\t\t\t// also see https://github.com/preactjs/preact/pull/2347/files\n\t\t\tif (name[0] === 'a' && name['1'] === 'r' && typeof v === 'boolean') {\n\t\t\t\tv = String(v);\n\t\t\t}\n\n\t\t\tlet hooked =\n\t\t\t\topts.attributeHook &&\n\t\t\t\topts.attributeHook(name, v, context, opts, isComponent);\n\t\t\tif (hooked || hooked === '') {\n\t\t\t\ts = s + hooked;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (name === 'dangerouslySetInnerHTML') {\n\t\t\t\thtml = v && v.__html;\n\t\t\t} else if (nodeName === 'textarea' && name === 'value') {\n\t\t\t\t// <textarea value=\"a&b\"> --> <textarea>a&amp;b</textarea>\n\t\t\t\tpropChildren = v;\n\t\t\t} else if ((v || v === 0 || v === '') && typeof v !== 'function') {\n\t\t\t\tif (v === true || v === '') {\n\t\t\t\t\tv = name;\n\t\t\t\t\t// in non-xml mode, allow boolean attributes\n\t\t\t\t\tif (!opts || !opts.xml) {\n\t\t\t\t\t\ts = s + ' ' + name;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (name === 'value') {\n\t\t\t\t\tif (nodeName === 'select') {\n\t\t\t\t\t\tselectValue = v;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t// If we're looking at an <option> and it's the currently selected one\n\t\t\t\t\t\tnodeName === 'option' &&\n\t\t\t\t\t\tselectValue == v &&\n\t\t\t\t\t\t// and the <option> doesn't already have a selected attribute on it\n\t\t\t\t\t\ttypeof props.selected === 'undefined'\n\t\t\t\t\t) {\n\t\t\t\t\t\ts = s + ` selected`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ts = s + ` ${name}=\"${encodeEntities(v)}\"`;\n\t\t\t}\n\t\t}\n\t}\n\n\t// account for >1 multiline attribute\n\tif (pretty) {\n\t\tlet sub = s.replace(/\\n\\s*/, ' ');\n\t\tif (sub !== s && !~sub.indexOf('\\n')) s = sub;\n\t\telse if (pretty && ~s.indexOf('\\n')) s = s + '\\n';\n\t}\n\n\ts = s + '>';\n\n\tif (UNSAFE_NAME.test(nodeName))\n\t\tthrow new Error(`${nodeName} is not a valid HTML tag name in ${s}`);\n\n\tlet isVoid =\n\t\tVOID_ELEMENTS.test(nodeName) ||\n\t\t(opts.voidElements && opts.voidElements.test(nodeName));\n\tlet pieces = [];\n\n\tlet children;\n\tif (html) {\n\t\t// if multiline, indent.\n\t\tif (pretty && isLargeString(html)) {\n\t\t\thtml = '\\n' + indentChar + indent(html, indentChar);\n\t\t}\n\t\ts = s + html;\n\t} else if (\n\t\tpropChildren != null &&\n\t\tgetChildren((children = []), propChildren).length\n\t) {\n\t\tlet hasLarge = pretty && ~s.indexOf('\\n');\n\t\tlet lastWasText = false;\n\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tlet child = children[i];\n\n\t\t\tif (child != null && child !== false) {\n\t\t\t\tlet childSvgMode =\n\t\t\t\t\t\tnodeName === 'svg'\n\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t: nodeName === 'foreignObject'\n\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t: isSvgMode,\n\t\t\t\t\tret = _renderToStringPretty(\n\t\t\t\t\t\tchild,\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\topts,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tchildSvgMode,\n\t\t\t\t\t\tselectValue\n\t\t\t\t\t);\n\n\t\t\t\tif (pretty && !hasLarge && isLargeString(ret)) hasLarge = true;\n\n\t\t\t\t// Skip if we received an empty string\n\t\t\t\tif (ret) {\n\t\t\t\t\tif (pretty) {\n\t\t\t\t\t\tlet isText = ret.length > 0 && ret[0] != '<';\n\n\t\t\t\t\t\t// We merge adjacent text nodes, otherwise each piece would be printed\n\t\t\t\t\t\t// on a new line.\n\t\t\t\t\t\tif (lastWasText && isText) {\n\t\t\t\t\t\t\tpieces[pieces.length - 1] += ret;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpieces.push(ret);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlastWasText = isText;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpieces.push(ret);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (pretty && hasLarge) {\n\t\t\tfor (let i = pieces.length; i--; ) {\n\t\t\t\tpieces[i] = '\\n' + indentChar + indent(pieces[i], indentChar);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (pieces.length || html) {\n\t\ts = s + pieces.join('');\n\t} else if (opts && opts.xml) {\n\t\treturn s.substring(0, s.length - 1) + ' />';\n\t}\n\n\tif (isVoid && !children && !html) {\n\t\ts = s.replace(/>$/, ' />');\n\t} else {\n\t\tif (pretty && ~s.indexOf('\\n')) s = s + '\\n';\n\t\ts = s + `</${nodeName}>`;\n\t}\n\n\treturn s;\n}\n\nfunction getComponentName(component) {\n\treturn (\n\t\tcomponent.displayName ||\n\t\t(component !== Function && component.name) ||\n\t\tgetFallbackComponentName(component)\n\t);\n}\n\nfunction getFallbackComponentName(component) {\n\tlet str = Function.prototype.toString.call(component),\n\t\tname = (str.match(/^\\s*function\\s+([^( ]+)/) || '')[1];\n\tif (!name) {\n\t\t// search for an existing indexed name for the given component:\n\t\tlet index = -1;\n\t\tfor (let i = UNNAMED.length; i--; ) {\n\t\t\tif (UNNAMED[i] === component) {\n\t\t\t\tindex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// not found, create a new indexed name:\n\t\tif (index < 0) {\n\t\t\tindex = UNNAMED.push(component) - 1;\n\t\t}\n\t\tname = `UnnamedComponent${index}`;\n\t}\n\treturn name;\n}\nrenderToString.shallowRender = shallowRender;\n\nexport default renderToString;\n\nexport {\n\trenderToString as render,\n\trenderToString as renderToStaticMarkup,\n\trenderToString,\n\tshallowRender\n};\n", "import d from \"./node_modules/preact-render-to-string/dist/index.module.js\";export default d;\nexport * from \"./node_modules/preact-render-to-string/dist/index.module.js\""],
  "mappings": "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",
  "names": ["IS_NON_DIMENSIONAL", "ENCODED_ENTITIES", "encodeEntities", "str", "test", "last", "i", "out", "ch", "length", "charCodeAt", "slice", "indent", "s", "char", "String", "replace", "isLargeString", "ignoreLines", "indexOf", "JS_TO_CSS", "styleObjToCss", "prop", "val", "toLowerCase", "undefined", "getChildren", "accumulator", "children", "Array", "isArray", "reduce", "push", "SHALLOW", "shallow", "UNNAMED", "VOID_ELEMENTS", "UNSAFE_NAME", "XLINK", "markAsDirty", "this", "__d", "renderToString", "render", "shallowRender", "vnode", "context", "EMPTY_ARR", "opts", "res", "previousSkipEffects", "options", "__s", "pretty", "sortAttributes", "_renderToStringPretty", "_renderToString", "__c", "createComponent", "__v", "props", "setState", "forceUpdate", "__h", "getContext", "nodeName", "cxType", "contextType", "provider", "value", "__", "inner", "isSvgMode", "selectValue", "rendered", "join", "type", "isComponent", "renderRootComponent", "Fragment", "shallowHighOrder", "c", "__b", "renderHook", "__r", "prototype", "cctx", "_dirty", "state", "_nextState", "getDerivedStateFromProps", "Object", "assign", "componentWillMount", "count", "call", "getChildContext", "diffed", "getComponentName", "propChildren", "html", "name", "v", "allAttributes", "hooked", "attributeHook", "__html", "xml", "selected", "Error", "isVoid", "voidElements", "pieces", "child", "ret", "substring", "indentChar", "attrs", "keys", "sort", "sub", "hasLarge", "lastWasText", "isText", "component", "displayName", "Function", "toString", "match", "index"]
}
